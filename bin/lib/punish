#!/bin/sh

LOG_PATH="/home/ubuntu/.log/cron-daemonctl.log"
UPTIME_THRESHOLD="5"

# how long before sshd starts
# e.g. "30 min", "1 hour", "2 hours"
#RECOVERY_TIME="1 min"
#RECOVERY_TIME="30 min"
#RECOVERY_TIME="1 hour"
RECOVERY_TIME="2 hours"

main() {
  parse "$@"
  eval "set -- $REST"

  if [ "$DURATION" != "" ]; then
    RECOVERY_TIME="$DURATION"
  fi

  if [ "$(echo "$(awk '{print $1}' /proc/uptime)" / 60 | bc)" -gt "$UPTIME_THRESHOLD" ]; then
    # for debug or logging
    echo "manual disablement detected (date: \"$(date)\", args: \"$(echo "$FROM" | sed -r 's/\s$//g')\", duration: $RECOVERY_TIME)" >> "$LOG_PATH"

    # shellcheck disable=SC2046
    echo "sudo systemctl start ssh" | at now + "$RECOVERY_TIME" &&
    sudo systemctl stop ssh &&
    # kill all users logging in with sshd
    # do not quote pgrep because the error occurs when multiple users are logging in with sshd
    kill -9 $(pgrep -f "sshd: .*@pts/|mosh-server")
  fi
}

# @getoptions
parser_definition() {
  setup   REST help:usage -- "Usage: punish [options]... [arguments]..." ''
  msg -- 'Options:'
  param   DURATION -d --duration -- "how long before sshd starts"
  param   FROM     -f --from     -- "specify where this script is invoked from"
  disp    :usage   -h --help
  disp    VERSION     --version
}
# @end

# @gengetoptions parser -i parser_definition parse
# Generated by getoptions (BEGIN)
# URL: https://github.com/ko1nksm/getoptions (v3.3.0)
DURATION=''
FROM=''
REST=''
parse() {
  OPTIND=$(($#+1))
  while OPTARG= && [ $# -gt 0 ]; do
    case $1 in
      --?*=*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%%\=*}" "${OPTARG#*\=}"' ${1+'"$@"'}
        ;;
      --no-*|--without-*) unset OPTARG ;;
      -[df]?*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%"${OPTARG#??}"}" "${OPTARG#??}"' ${1+'"$@"'}
        ;;
      -[h]?*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%"${OPTARG#??}"}" -"${OPTARG#??}"' ${1+'"$@"'}
        OPTARG= ;;
    esac
    case $1 in
      '-d'|'--duration')
        [ $# -le 1 ] && set "required" "$1" && break
        OPTARG=$2
        DURATION="$OPTARG"
        shift ;;
      '-f'|'--from')
        [ $# -le 1 ] && set "required" "$1" && break
        OPTARG=$2
        FROM="$OPTARG"
        shift ;;
      '-h'|'--help')
        usage
        exit 0 ;;
      '--version')
        echo "${VERSION}"
        exit 0 ;;
      --)
        shift
        while [ $# -gt 0 ]; do
          REST="${REST} \"\${$(($OPTIND-$#))}\""
          shift
        done
        break ;;
      [-]?*) set "unknown" "$1"; break ;;
      *)
        REST="${REST} \"\${$(($OPTIND-$#))}\""
    esac
    shift
  done
  [ $# -eq 0 ] && { OPTIND=1; unset OPTARG; return 0; }
  case $1 in
    unknown) set "Unrecognized option: $2" "$@" ;;
    noarg) set "Does not allow an argument: $2" "$@" ;;
    required) set "Requires an argument: $2" "$@" ;;
    pattern:*) set "Does not match the pattern (${1#*:}): $2" "$@" ;;
    notcmd) set "Not a command: $2" "$@" ;;
    *) set "Validation error ($1): $2" "$@"
  esac
  echo "$1" >&2
  exit 1
}
usage() {
cat<<'GETOPTIONSHERE'
Usage: punish [options]... [arguments]...

Options:
  -d, --duration DURATION     how long before sshd starts
  -f, --from FROM             specify where this script is invoked from
  -h, --help
      --version
GETOPTIONSHERE
}
# Generated by getoptions (END)
# @end

main "$@"
