#!/bin/sh

PROGNAME=$(basename $0)
IS_CRON_SCRIPT=$(dirname $(realpath $0))/lib/is-cron

DNSMASQ_TOGGLE_DIR=/etc/dnsmasq.toggle
DNSMASQ_PRIV_TOGGLE_DIR=/etc/dnsmasq.priv/toggle

COUNTER_DIR=/home/ubuntu/.ifp_counter

main() {
  subcommand=$1
  period=$2
  target=$3

  case $subcommand in
    get)
      get_value
      ;;
    set)
      validate_value
      authenticate
      set_value
      get_value
      ;;
    *)
      usage
      exit 1
      ;;
  esac
}

get_value() {
  for file in $COUNTER_DIR/**/*; do
    echo

    if [ $(echo "$file" | grep "public/$(basename "$file")") ]; then
      conf_file=$DNSMASQ_TOGGLE_DIR/$(basename "$file").conf
      visibility=public
    elif [ $(echo "$file" | grep "private/$(basename "$file")") ]; then
      conf_file=$DNSMASQ_PRIV_TOGGLE_DIR/$(basename "$file").conf
      visibility=private
    fi

    echo    "\033[38;05;11m$visibility/$(basename "$file")\033[m"

    echo -n "	Counter:  "
    cat     "$file"

    echo -n "	Status:   "
    if [ -e "$conf_file" ]; then
      echo "\033[38;05;10menabled\033[m (\033[38;05;11m$conf_file\033[m exists)"
    else
      echo "\033[38;05;9mdisabled\033[m (\033[38;05;11m$conf_file\033[m does not exist)"
    fi
  done
}

set_value() {
  echo $period > $target
}

validate_value() {
  if [ -z $period ] || [ -z $target ]; then
    usage
    exit 1
  fi

  if ! $(is_integer $period && echo true || echo false); then
    echo "Error: \"$period\" is not a integer value" >&2
    exit 1
  fi

  if [ ! -e $target ]; then
    echo "Error: \"$target\" does not exist" >&2
    exit 1
  fi
}

authenticate() {
  if [ "$(sh -c "$IS_CRON_SCRIPT")" = false ]; then
    echo "Fatal: This operation must be executed by cron, or the internet fasting does not take enough effect" >&2
    exit 2
  fi
}

is_integer() {
  test 0 -eq $1 > /dev/null 2>&1 || expr $1 + 0 > /dev/null 2>&1
}

usage() {
  echo "Usage:"
  echo "	$PROGNAME get"
  echo "	$PROGNAME set <NUMBER> <TARGET_COUNTER_FILE>"
}

main "$@"
