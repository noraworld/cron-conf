#!/bin/bash

set -eu

FULL_PATH=$(dirname "$(realpath "$0")")
CRON_FILE="$FULL_PATH/../raspberrypi/schedules.cron"
PRIVATE_CRON_FILE="$FULL_PATH/../raspberrypi/private/schedules.cron"

CRON_API_URL="https://api.github.com/repos/noraworld/cron-conf/contents/raspberrypi/schedules.cron"
PRIVATE_CRON_API_URL="https://api.github.com/repos/noraworld/envsman/contents/raspberrypi/cron-conf/private/schedules.cron"

JUDGE_FILEPATH="/etc/dnsmasq.toggle/youtube.conf"



main() {
  judge

  local_cron_conf="$(print_conf "$CRON_FILE" "$PRIVATE_CRON_FILE")"
  remote_cron_conf="$(print_conf_remote $CRON_API_URL $PRIVATE_CRON_API_URL)"

  if [ "$(diff <(crontab -l) <(echo "$local_cron_conf"))" = "" ]; then
    echo "INFO: No need to update because current and local cron configs are the same" >&2
    exit 0
  fi

  if [ "$(diff <(echo "$local_cron_conf") <(echo "$remote_cron_conf"))" != "" ]; then
    echo "ERROR: Cancel updating because local and remote cron configs are different" >&2
    exit 1
  fi

  echo "$local_cron_conf" | crontab

  check_failed=false
  check "$local_cron_conf" "$(crontab -l)"
  if $check_failed; then
    exit 1
  fi

  crontab -l
}



judge() {
  if [ -e "$JUDGE_FILEPATH" ]; then
    echo "ERROR: Failed to apply cron configurations because \"$JUDGE_FILEPATH\" exists" >&2
    echo "       It can be used only when \"$JUDGE_FILEPATH\" does not exist" >&2
    echo "       But you should not delete it manually because this behavior is to make it difficult to change cron configurations" >&2
    exit 1
  fi

  # TODO: implement additional feature so that it can be only executed via cron
}



check() {
  if [ "$(diff <(echo "$1") <(echo "$2"))" != "" ]; then
    echo "ERROR: It looks like something went wrong" >&2
    echo >&2
    echo "The diff shows here:" >&2
    diff <(echo "$1") <(echo "$2") >&2
    check_failed=true
  fi
}



# This should be performed only once
# because the limit of GitHub API requests exceeds
# if they are called too many
print_conf_remote() {
  echo "##### BEGIN PUBLIC CRON CONF #####"
  curl --silent "$(gh api "$1" --jq .download_url)"
  echo "##### END PUBLIC CRON CONF #####"
  echo
  echo
  echo
  echo "##### BEGIN PRIVATE CRON CONF #####"
  curl --silent "$(gh api "$2" --jq .download_url)"
  echo "##### END PRIVATE CRON CONF #####"
}



print_conf() {
  echo "##### BEGIN PUBLIC CRON CONF #####"
  cat "$1"
  echo "##### END PUBLIC CRON CONF #####"
  echo
  echo
  echo
  echo "##### BEGIN PRIVATE CRON CONF #####"
  cat "$2"
  echo "##### END PRIVATE CRON CONF #####"
}



main "$@"
