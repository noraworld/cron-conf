#!/bin/sh
# shellcheck disable=SC2004

PROG_NAME=$(basename "$0")
linked=false

main() {
  parse "$@"
  eval "set -- $REST"

  if [ "$#" -eq 2 ]; then
    visibility=$1
    target=$2
  elif [ "$#" -eq 1 ]; then
    if [ "$(echo "$1" | grep -c "/etc/dnsmasq.toggle")" -ne 0 ]; then
      visibility="public"
    elif [ "$(echo "$1" | grep -c "/etc/dnsmasq.priv/toggle")" -ne 0 ]; then
      visibility="private"
    fi
    target=$(basename "$1" | sed -r 's/.conf$//g')
  fi

  if [ "$visibility" = "public" ]; then
    TOGGLE_DIR=/etc/dnsmasq.toggle
    ORIGINAL_TOGGLE_DIR=/home/ubuntu/workspace/dnsmasq-conf/dnsmasq/dnsmasq.toggle
  elif [ "$visibility" = "private" ]; then
    TOGGLE_DIR=/etc/dnsmasq.priv/toggle
    ORIGINAL_TOGGLE_DIR=/home/ubuntu/workspace/dnsmasq-conf/dnsmasq/dnsmasq.priv/toggle
  fi

  sudo mkdir -p "$TOGGLE_DIR"

  # illegal situation
  if [ -e "$TOGGLE_DIR/$target.conf" ] && ! [ -L "$TOGGLE_DIR/$target.conf" ]; then
    linked=true
    sudo rm "$TOGGLE_DIR/$target.conf"
  fi

  # illegal situation
  if [ -L "$TOGGLE_DIR/$target.conf" ] && [ "$(readlink "$TOGGLE_DIR/$target.conf")" != "$ORIGINAL_TOGGLE_DIR/$target.conf" ]; then
    linked=true
    sudo unlink "$TOGGLE_DIR/$target.conf"
  fi

  if ! [ -e "$TOGGLE_DIR/$target.conf" ]; then
    linked=true
    sudo ln -s "$ORIGINAL_TOGGLE_DIR/$target.conf" "$TOGGLE_DIR"
  else
    echo "Warning: \"$TOGGLE_DIR/$target.conf\" already exists" >&2
  fi

  # Restart the Dnsmasq daemon when a symlink is created
  if $linked && [ "$SKIP" != 1 ]; then
    if [ "$IMMEDIATELY" = 1 ]; then
      sudo systemctl restart dnsmasq
    else
      # It is performed in the background.
      exrd --skip --log /home/ubuntu/.log/exrd.log --from "$(echo "$PROG_NAME $@")" &
    fi
  fi
}

# @getoptions
parser_definition() {
  setup  REST help:usage -- "Usage: create-dnsmasq-toggle-conf [options]... [arguments]..." ''
  msg -- 'Options:'
  flag   IMMEDIATELY    --immediately -- "restart dnsmasq immediately"
  flag   SKIP           --skip        -- "skip dnsmasq restart"
  disp   :usage      -h --help        -- "show help message and exit"
  disp   VERSION        --version     -- "show version and exit"
}
# @end

# @gengetoptions parser -i parser_definition parse
# Generated by getoptions (BEGIN)
# URL: https://github.com/ko1nksm/getoptions (v3.3.0)
IMMEDIATELY=''
SKIP=''
REST=''
parse() {
  OPTIND=$(($#+1))
  while OPTARG= && [ $# -gt 0 ]; do
    case $1 in
      --?*=*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%%\=*}" "${OPTARG#*\=}"' ${1+'"$@"'}
        ;;
      --no-*|--without-*) unset OPTARG ;;
      -[h]?*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%"${OPTARG#??}"}" -"${OPTARG#??}"' ${1+'"$@"'}
        OPTARG= ;;
    esac
    case $1 in
      '--immediately')
        [ "${OPTARG:-}" ] && OPTARG=${OPTARG#*\=} && set "noarg" "$1" && break
        eval '[ ${OPTARG+x} ] &&:' && OPTARG='1' || OPTARG=''
        IMMEDIATELY="$OPTARG"
        ;;
      '--skip')
        [ "${OPTARG:-}" ] && OPTARG=${OPTARG#*\=} && set "noarg" "$1" && break
        eval '[ ${OPTARG+x} ] &&:' && OPTARG='1' || OPTARG=''
        SKIP="$OPTARG"
        ;;
      '-h'|'--help')
        usage
        exit 0 ;;
      '--version')
        echo "${VERSION}"
        exit 0 ;;
      --)
        shift
        while [ $# -gt 0 ]; do
          REST="${REST} \"\${$(($OPTIND-$#))}\""
          shift
        done
        break ;;
      [-]?*) set "unknown" "$1"; break ;;
      *)
        REST="${REST} \"\${$(($OPTIND-$#))}\""
    esac
    shift
  done
  [ $# -eq 0 ] && { OPTIND=1; unset OPTARG; return 0; }
  case $1 in
    unknown) set "Unrecognized option: $2" "$@" ;;
    noarg) set "Does not allow an argument: $2" "$@" ;;
    required) set "Requires an argument: $2" "$@" ;;
    pattern:*) set "Does not match the pattern (${1#*:}): $2" "$@" ;;
    notcmd) set "Not a command: $2" "$@" ;;
    *) set "Validation error ($1): $2" "$@"
  esac
  echo "$1" >&2
  exit 1
}
usage() {
cat<<'GETOPTIONSHERE'
Usage: create-dnsmasq-toggle-conf [options]... [arguments]...

Options:
      --immediately           restart dnsmasq immediately
      --skip                  skip dnsmasq restart
  -h, --help                  show help message and exit
      --version               show version and exit
GETOPTIONSHERE
}
# Generated by getoptions (END)
# @end

main "$@"
