#!/bin/sh

set -eu

main() {
  parse "$@"
  eval "set -- $REST"
  validate "$@"

  keywords=$(printf '%s\n' "$@" | paste -sd '|')
  pattern='\\*\\s*\\[x\\].*\\[('"$keywords"')\\]\\(https://github.com/noraworld/diary-templates/issues/[0-9]*\\)'
  [ "$DEBUG" = "1" ] && echo "keywords: $keywords" >&2
  [ "$DEBUG" = "1" ] && echo "pattern:  $pattern"  >&2
  [ "$DEBUG" = "1" ] && echo "past:     $PAST"     >&2

  eval "todo-cache --repo $REPO --past $PAST | grep -cE \"$pattern\"" || true
}

validate() {
  if [ "$REPO" = "" ]; then
    echo "--repo is missing" >&2
    exit 1
  fi

  if [ "$PAST" = "" ]; then
    PAST=0
  fi
}

# @getoptions
parser_definition() {
  setup   REST help:usage -- "Usage: ticksum [options]... [arguments]..." ''
  msg -- 'Options:'
  flag    DEBUG      --debug   -- "debug"
  param   PAST       --past    -- "past (default: 0)"
  param   REPO       --repo    -- "repo"
  disp    :usage  -h --help
  disp    VERSION    --version
}
# @end

# @gengetoptions parser -i parser_definition parse
# Generated by getoptions (BEGIN)
# URL: https://github.com/ko1nksm/getoptions (v3.3.0)
DEBUG=''
PAST=''
REPO=''
REST=''
parse() {
  OPTIND=$(($#+1))
  while OPTARG= && [ $# -gt 0 ]; do
    case $1 in
      --?*=*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%%\=*}" "${OPTARG#*\=}"' ${1+'"$@"'}
        ;;
      --no-*|--without-*) unset OPTARG ;;
      -[h]?*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%"${OPTARG#??}"}" -"${OPTARG#??}"' ${1+'"$@"'}
        OPTARG= ;;
    esac
    case $1 in
      '--debug')
        [ "${OPTARG:-}" ] && OPTARG=${OPTARG#*\=} && set "noarg" "$1" && break
        eval '[ ${OPTARG+x} ] &&:' && OPTARG='1' || OPTARG=''
        DEBUG="$OPTARG"
        ;;
      '--past')
        [ $# -le 1 ] && set "required" "$1" && break
        OPTARG=$2
        PAST="$OPTARG"
        shift ;;
      '--repo')
        [ $# -le 1 ] && set "required" "$1" && break
        OPTARG=$2
        REPO="$OPTARG"
        shift ;;
      '-h'|'--help')
        usage
        exit 0 ;;
      '--version')
        echo "${VERSION}"
        exit 0 ;;
      --)
        shift
        while [ $# -gt 0 ]; do
          REST="${REST} \"\${$(($OPTIND-$#))}\""
          shift
        done
        break ;;
      [-]?*) set "unknown" "$1"; break ;;
      *)
        REST="${REST} \"\${$(($OPTIND-$#))}\""
    esac
    shift
  done
  [ $# -eq 0 ] && { OPTIND=1; unset OPTARG; return 0; }
  case $1 in
    unknown) set "Unrecognized option: $2" "$@" ;;
    noarg) set "Does not allow an argument: $2" "$@" ;;
    required) set "Requires an argument: $2" "$@" ;;
    pattern:*) set "Does not match the pattern (${1#*:}): $2" "$@" ;;
    notcmd) set "Not a command: $2" "$@" ;;
    *) set "Validation error ($1): $2" "$@"
  esac
  echo "$1" >&2
  exit 1
}
usage() {
cat<<'GETOPTIONSHERE'
Usage: ticksum [options]... [arguments]...

Options:
      --debug                 debug
      --past PAST             past (default: 0)
      --repo REPO             repo
  -h, --help
      --version
GETOPTIONSHERE
}
# Generated by getoptions (END)
# @end

main "$@"
