#!/bin/sh
# shellcheck disable=SC2004

set -eu
trap remaining_time EXIT

reference_minute=0
SLEEP_INTERVAL=5

main() {
  service="$1"

  parse "$@"
  eval "set -- $REST"

  case "$service" in
    "chime")
      chime
      ;;
    "deregulated-superman")
      deregulated_superman
      ;;
    "ometeotl")
      ometeotl
      ;;
    "superman")
      superman
      ;;
    "vod")
      vod
      ;;
    "youtube")
      youtube
      ;;
    "youtube-alternative")
      youtube_alternative
      ;;
    "youtube-music")
      youtube_music
      ;;
    "adguard-upstream")
      adguard_upstream
      ;;
    "cloudflare-upstream")
      cloudflare_upstream
      ;;
    "nordvpn-upstream")
      nordvpn_upstream
      ;;
    "superman-upstream")
      superman_upstream
      ;;
    *)
      echo "error: no such service $service" >&2
      exit 1
      ;;
  esac

  echo "restarting dnsmasq"
  sudo systemctl restart dnsmasq

  if [ "$(sudo systemctl is-active dnsmasq)" != "active" ]; then
    echo "error: dnsmasq daemon could not restart unexpectedly" >&2
    sudo systemctl status dnsmasq >&2
    exit 1
  fi
}

chime() {
  reference_minute=10
  [ "$DRY_RUN" = 1 ] && exit 0

  sudo unlink /etc/dnsmasq.toggle/chime.conf

  pause

  [ -L /etc/dnsmasq.toggle/chime.conf ] && echo "error: /etc/dnsmasq.toggle/chime.conf still exists" >&2 && exit
}

deregulated_superman() {
  reference_minute=30
  [ "$DRY_RUN" = 1 ] && exit 0

  [ -L /etc/dnsmasq.priv/toggle/deregulated_superman_allow.conf ] || sudo ln -s /home/ubuntu/workspace/dnsmasq-conf/dnsmasq/dnsmasq.priv/toggle/deregulated_superman_allow.conf /etc/dnsmasq.priv/toggle
  sudo unlink /etc/dnsmasq.priv/toggle/deregulated_superman.conf

  pause

  [ -L /etc/dnsmasq.priv/toggle/deregulated_superman_allow.conf ] || echo "error: /etc/dnsmasq.priv/toggle/deregulated_superman_allow.conf still doesn't exist" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/deregulated_superman.conf ] && echo "error: /etc/dnsmasq.priv/toggle/deregulated_superman.conf still exists" >&2 && exit
}

ometeotl() {
  reference_minute=60
  [ "$DRY_RUN" = 1 ] && exit 0

  sudo unlink /etc/dnsmasq.priv/toggle/ometeotl.conf

  pause

  [ -L /etc/dnsmasq.priv/toggle/ometeotl.conf ] && echo "error: /etc/dnsmasq.priv/toggle/ometeotl.conf still exists" >&2 && exit
}

superman() {
  reference_minute=60
  [ "$DRY_RUN" = 1 ] && exit 0

  [ -L /etc/dnsmasq.priv/toggle/ometeotl.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/ometeotl.conf
  [ -L /etc/dnsmasq.priv/toggle/superman_upstream.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/superman_upstream.conf
  [ -L /etc/dnsmasq.priv/toggle/adguard_upstream.conf ] || sudo ln -s /home/ubuntu/workspace/dnsmasq-conf/dnsmasq/dnsmasq.priv/toggle/adguard_upstream.conf /etc/dnsmasq.priv/toggle
  sudo unlink /etc/dnsmasq.priv/toggle/superman.conf

  pause

  [ -L /etc/dnsmasq.priv/toggle/ometeotl.conf ] && echo "error: /etc/dnsmasq.priv/toggle/ometeotl.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/superman_upstream.conf ] && echo "error: /etc/dnsmasq.priv/toggle/superman_upstream.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/adguard_upstream.conf ] || echo "error: /etc/dnsmasq.priv/toggle/adguard_upstream.conf still doesn't exist" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/superman.conf ] && echo "error: /etc/dnsmasq.priv/toggle/superman.conf still exists" >&2 && exit
}

vod() {
  reference_minute=5
  [ "$DRY_RUN" = 1 ] && exit 0

  [ -L /etc/dnsmasq.priv/toggle/ometeotl.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/ometeotl.conf
  sudo unlink /etc/dnsmasq.toggle/vod.conf

  pause

  [ -L /etc/dnsmasq.priv/toggle/ometeotl.conf ] && echo "error: /etc/dnsmasq.priv/toggle/ometeotl.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.toggle/vod.conf ] && echo "error: /etc/dnsmasq.toggle/vod.conf still exists" >&2 && exit
}

youtube() {
  reference_minute=60
  [ "$DRY_RUN" = 1 ] && exit 0

  sudo unlink /etc/dnsmasq.toggle/youtube.conf

  pause

  [ -L /etc/dnsmasq.toggle/youtube.conf ] && echo "error: /etc/dnsmasq.toggle/youtube.conf still exists" >&2 && exit
}

youtube_alternative() {
  reference_minute=10
  [ "$DRY_RUN" = 1 ] && exit 0

  sudo ln -s /home/ubuntu/workspace/dnsmasq-conf/dnsmasq/dnsmasq.toggle/youtube_alternative.conf /etc/dnsmasq.toggle

  pause

  [ -L /etc/dnsmasq.toggle/youtube_alternative.conf ] || echo "error: /etc/dnsmasq.toggle/youtube_alternative.conf still doesn't exist" >&2 && exit
}

youtube_music() {
  reference_minute=10
  [ "$DRY_RUN" = 1 ] && exit 0

  sudo ln -s /home/ubuntu/workspace/dnsmasq-conf/dnsmasq/dnsmasq.toggle/youtube_music.conf /etc/dnsmasq.toggle

  pause

  [ -L /etc/dnsmasq.toggle/youtube_music.conf ] || echo "error: /etc/dnsmasq.toggle/youtube_music.conf still doesn't exist" >&2 && exit
}

adguard_upstream() {
  [ -L /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf
  [ -L /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf
  [ -L /etc/dnsmasq.priv/toggle/superman_upstream.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/superman_upstream.conf
  sudo ln -s /home/ubuntu/workspace/dnsmasq-conf/dnsmasq/dnsmasq.priv/toggle/adguard_upstream.conf /etc/dnsmasq.priv/toggle

  pause

  [ -L /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf ] && echo "error: /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf ] && echo "error: /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/superman_upstream.conf ] && echo "error: /etc/dnsmasq.priv/toggle/superman_upstream.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/adguard_upstream.conf ] || echo "error: /etc/dnsmasq.priv/toggle/adguard_upstream.conf still doesn't exist" >&2 && exit
}

cloudflare_upstream() {
  [ -L /etc/dnsmasq.priv/toggle/adguard_upstream.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/adguard_upstream.conf
  [ -L /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf
  [ -L /etc/dnsmasq.priv/toggle/superman_upstream.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/superman_upstream.conf
  sudo ln -s /home/ubuntu/workspace/dnsmasq-conf/dnsmasq/dnsmasq.priv/toggle/cloudflare_upstream.conf /etc/dnsmasq.priv/toggle

  pause

  [ -L /etc/dnsmasq.priv/toggle/adguard_upstream.conf ] && echo "error: /etc/dnsmasq.priv/toggle/adguard_upstream.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf ] && echo "error: /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/superman_upstream.conf ] && echo "error: /etc/dnsmasq.priv/toggle/superman_upstream.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf ] || echo "error: /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf still doesn't exist" >&2 && exit
}

nordvpn_upstream() {
  [ -L /etc/dnsmasq.priv/toggle/adguard_upstream.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/adguard_upstream.conf
  [ -L /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf
  [ -L /etc/dnsmasq.priv/toggle/superman_upstream.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/superman_upstream.conf
  sudo ln -s /home/ubuntu/workspace/dnsmasq-conf/dnsmasq/dnsmasq.priv/toggle/nordvpn_upstream.conf /etc/dnsmasq.priv/toggle

  pause

  [ -L /etc/dnsmasq.priv/toggle/adguard_upstream.conf ] && echo "error: /etc/dnsmasq.priv/toggle/adguard_upstream.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf ] && echo "error: /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/superman_upstream.conf ] && echo "error: /etc/dnsmasq.priv/toggle/superman_upstream.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf ] || echo "error: /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf still doesn't exist" >&2 && exit
}

superman_upstream() {
  [ -L /etc/dnsmasq.priv/toggle/adguard_upstream.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/adguard_upstream.conf
  [ -L /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf
  [ -L /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf ] && sudo unlink /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf
  sudo ln -s /home/ubuntu/workspace/dnsmasq-conf/dnsmasq/dnsmasq.priv/toggle/superman_upstream.conf /etc/dnsmasq.priv/toggle

  pause

  [ -L /etc/dnsmasq.priv/toggle/adguard_upstream.conf ] && echo "error: /etc/dnsmasq.priv/toggle/adguard_upstream.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf ] && echo "error: /etc/dnsmasq.priv/toggle/cloudflare_upstream.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf ] && echo "error: /etc/dnsmasq.priv/toggle/nordvpn_upstream.conf still exists" >&2 && exit
  [ -L /etc/dnsmasq.priv/toggle/superman_upstream.conf ] || echo "error: /etc/dnsmasq.priv/toggle/superman_upstream.conf still doesn't exist" >&2 && exit
}

remaining_time() {
  if [ "$reference_minute" -gt 0 ]; then
    remaining-time $reference_minute
  fi
}

pause() {
  echo "waiting for $SLEEP_INTERVAL seconds for the observer daemon to be effective and to avoid excessive execution"
  sleep "$SLEEP_INTERVAL"
}

# @getoptions
parser_definition() {
  setup   REST help:usage -- "Usage: unlock [options]... [arguments]..." ''
  msg -- 'Options:'
  flag    DRY_RUN    --dry-run -- "just show remaining time"
  disp    :usage  -h --help    -- "show help message and exit"
  disp    VERSION    --version -- "show current version"
}
# @end

# @gengetoptions parser -i parser_definition parse
# Generated by getoptions (BEGIN)
# URL: https://github.com/ko1nksm/getoptions (v3.3.0)
DRY_RUN=''
REST=''
parse() {
  OPTIND=$(($#+1))
  while OPTARG= && [ $# -gt 0 ]; do
    case $1 in
      --?*=*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%%\=*}" "${OPTARG#*\=}"' ${1+'"$@"'}
        ;;
      --no-*|--without-*) unset OPTARG ;;
      -[h]?*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%"${OPTARG#??}"}" -"${OPTARG#??}"' ${1+'"$@"'}
        OPTARG= ;;
    esac
    case $1 in
      '--dry-run')
        [ "${OPTARG:-}" ] && OPTARG=${OPTARG#*\=} && set "noarg" "$1" && break
        eval '[ ${OPTARG+x} ] &&:' && OPTARG='1' || OPTARG=''
        DRY_RUN="$OPTARG"
        ;;
      '-h'|'--help')
        usage
        exit 0 ;;
      '--version')
        echo "${VERSION}"
        exit 0 ;;
      --)
        shift
        while [ $# -gt 0 ]; do
          REST="${REST} \"\${$(($OPTIND-$#))}\""
          shift
        done
        break ;;
      [-]?*) set "unknown" "$1"; break ;;
      *)
        REST="${REST} \"\${$(($OPTIND-$#))}\""
    esac
    shift
  done
  [ $# -eq 0 ] && { OPTIND=1; unset OPTARG; return 0; }
  case $1 in
    unknown) set "Unrecognized option: $2" "$@" ;;
    noarg) set "Does not allow an argument: $2" "$@" ;;
    required) set "Requires an argument: $2" "$@" ;;
    pattern:*) set "Does not match the pattern (${1#*:}): $2" "$@" ;;
    notcmd) set "Not a command: $2" "$@" ;;
    *) set "Validation error ($1): $2" "$@"
  esac
  echo "$1" >&2
  exit 1
}
usage() {
cat<<'GETOPTIONSHERE'
Usage: unlock [options]... [arguments]...

Options:
      --dry-run               just show remaining time
  -h, --help                  show help message and exit
      --version               show current version
GETOPTIONSHERE
}
# Generated by getoptions (END)
# @end

main "$@"
