#!/bin/sh

main() {
  parse "$@"
  eval "set -- $REST"

  if [ "$FORCE" = "1" ]; then
    force="--force"
  else
    force=""
  fi

  personal=""
  work=""

  personal=$(
    illegal-check-detector                      \
      --main-repo     noraworld/reserved-diary  \
      --template-repo noraworld/diary-templates \
      --todo-repo     noraworld/to-do           \
      $force
  )
  work=$(
    illegal-check-detector                             \
      --main-repo     noraworld/daily-report           \
      --template-repo noraworld/daily-report-templates \
      --todo-repo     noraworld/work-scraps            \
      $force
  )

  if [ "$personal" = "1" ] && [ "$work" = "1" ]; then
    echo "1"
  elif [ "$personal" = "-2" ] || [ "$work" = "-2" ]; then
    echo "-2"
  elif [ "$personal" = "-1" ] || [ "$work" = "-1" ]; then
    echo "-1"
  else
    echo "0"
  fi
}

# @getoptions
parser_definition() {
  setup   REST help:usage -- "Usage: sincere [options]... [arguments]..." ''
  msg -- 'Options:'
  flag    FORCE      --force   -- "get content from APIs even if cache exists"
  disp    :usage  -h --help
  disp    VERSION    --version
}
# @end

# @gengetoptions parser -i parser_definition parse
# Generated by getoptions (BEGIN)
# URL: https://github.com/ko1nksm/getoptions (v3.3.0)
FORCE=''
REST=''
parse() {
  OPTIND=$(($#+1))
  while OPTARG= && [ $# -gt 0 ]; do
    case $1 in
      --?*=*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%%\=*}" "${OPTARG#*\=}"' ${1+'"$@"'}
        ;;
      --no-*|--without-*) unset OPTARG ;;
      -[h]?*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%"${OPTARG#??}"}" -"${OPTARG#??}"' ${1+'"$@"'}
        OPTARG= ;;
    esac
    case $1 in
      '--force')
        [ "${OPTARG:-}" ] && OPTARG=${OPTARG#*\=} && set "noarg" "$1" && break
        eval '[ ${OPTARG+x} ] &&:' && OPTARG='1' || OPTARG=''
        FORCE="$OPTARG"
        ;;
      '-h'|'--help')
        usage
        exit 0 ;;
      '--version')
        echo "${VERSION}"
        exit 0 ;;
      --)
        shift
        while [ $# -gt 0 ]; do
          REST="${REST} \"\${$(($OPTIND-$#))}\""
          shift
        done
        break ;;
      [-]?*) set "unknown" "$1"; break ;;
      *)
        REST="${REST} \"\${$(($OPTIND-$#))}\""
    esac
    shift
  done
  [ $# -eq 0 ] && { OPTIND=1; unset OPTARG; return 0; }
  case $1 in
    unknown) set "Unrecognized option: $2" "$@" ;;
    noarg) set "Does not allow an argument: $2" "$@" ;;
    required) set "Requires an argument: $2" "$@" ;;
    pattern:*) set "Does not match the pattern (${1#*:}): $2" "$@" ;;
    notcmd) set "Not a command: $2" "$@" ;;
    *) set "Validation error ($1): $2" "$@"
  esac
  echo "$1" >&2
  exit 1
}
usage() {
cat<<'GETOPTIONSHERE'
Usage: sincere [options]... [arguments]...

Options:
      --force                 get content from APIs even if cache exists
  -h, --help
      --version
GETOPTIONSHERE
}
# Generated by getoptions (END)
# @end

main "$@"
