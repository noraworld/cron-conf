#!/bin/sh

PROG_NAME=$(basename $0)
IS_CRON_SCRIPT=$(dirname $(realpath $0))/../../bin/lib/is-cron

unlinked=false

main() {
  parse "$@"
  eval "set -- $REST"

  visibility=$1
  target=$2

  validate
  authenticate

  if [ "$visibility" = "public" ]; then
    TOGGLE_FILEPATH=/etc/dnsmasq.toggle/$target.conf
  elif [ "$visibility" = "private" ]; then
    TOGGLE_FILEPATH=/etc/dnsmasq.priv/toggle/$target.conf
  fi

  if [ -L "$TOGGLE_FILEPATH" ]; then
    unlinked=true
    sudo unlink $TOGGLE_FILEPATH
  else
    echo "Warning: \"$TOGGLE_FILEPATH\" does not exist" >&2
  fi

  if $unlinked && [ "$SKIP" != 1 ]; then
    # It is performed in the background.
    exrd --log /home/ubuntu/.log/exrd.log --from "$(echo "$PROG_NAME $@")" &
  fi
}

validate() {
  if [ -z "$visibility" ] || [ -z "$target" ]; then
    usage
    exit 1
  fi

  if [ "$visibility" != "public" ] && [ "$visibility" != "private" ]; then
    usage
    exit 1
  fi
}

authenticate() {
  if [ "$(sh -c "$IS_CRON_SCRIPT")" = false ]; then
    echo "Fatal: This operation must be executed by cron, or this script does not take enough effect" >&2
    exit 2
  fi
}

usage() {
  echo "Usage:"
  echo "	$PROG_NAME public|private <TARGET>"
}

# @getoptions
parser_definition() {
  setup   REST help:usage -- "Usage: remove-dnsmasq-toggle-conf [options]... [arguments]..." ''
  msg -- 'Options:'
  flag SKIP       --skip    -- "skip dnsmasq restart"
  disp :usage  -h --help
  disp VERSION    --version
}
# @end

# @gengetoptions parser -i parser_definition parse
# Generated by getoptions (BEGIN)
# URL: https://github.com/ko1nksm/getoptions (v3.3.0)
SKIP=''
REST=''
parse() {
  OPTIND=$(($#+1))
  while OPTARG= && [ $# -gt 0 ]; do
    case $1 in
      --?*=*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%%\=*}" "${OPTARG#*\=}"' ${1+'"$@"'}
        ;;
      --no-*|--without-*) unset OPTARG ;;
      -[h]?*) OPTARG=$1; shift
        eval 'set -- "${OPTARG%"${OPTARG#??}"}" -"${OPTARG#??}"' ${1+'"$@"'}
        OPTARG= ;;
    esac
    case $1 in
      '--skip')
        [ "${OPTARG:-}" ] && OPTARG=${OPTARG#*\=} && set "noarg" "$1" && break
        eval '[ ${OPTARG+x} ] &&:' && OPTARG='1' || OPTARG=''
        SKIP="$OPTARG"
        ;;
      '-h'|'--help')
        usage
        exit 0 ;;
      '--version')
        echo "${VERSION}"
        exit 0 ;;
      --)
        shift
        while [ $# -gt 0 ]; do
          REST="${REST} \"\${$(($OPTIND-$#))}\""
          shift
        done
        break ;;
      [-]?*) set "unknown" "$1"; break ;;
      *)
        REST="${REST} \"\${$(($OPTIND-$#))}\""
    esac
    shift
  done
  [ $# -eq 0 ] && { OPTIND=1; unset OPTARG; return 0; }
  case $1 in
    unknown) set "Unrecognized option: $2" "$@" ;;
    noarg) set "Does not allow an argument: $2" "$@" ;;
    required) set "Requires an argument: $2" "$@" ;;
    pattern:*) set "Does not match the pattern (${1#*:}): $2" "$@" ;;
    notcmd) set "Not a command: $2" "$@" ;;
    *) set "Validation error ($1): $2" "$@"
  esac
  echo "$1" >&2
  exit 1
}
usage() {
cat<<'GETOPTIONSHERE'
Usage: remove-dnsmasq-toggle-conf [options]... [arguments]...

Options:
      --skip                  skip dnsmasq restart
  -h, --help
      --version
GETOPTIONSHERE
}
# Generated by getoptions (END)
# @end

main "$@"
