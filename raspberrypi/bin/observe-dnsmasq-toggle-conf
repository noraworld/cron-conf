#!/bin/sh

# Example usage:
#   --event create --file youtube_music.conf --target /etc/dnsmasq.toggle
#   --event delete --file youtube.conf --source /home/ubuntu/workspace/dnsmasq-conf/dnsmasq/dnsmasq.toggle --target /etc/dnsmasq.toggle
#   --event modify --target /home/ubuntu/workspace/dnsmasq-conf/dnsmasq/dnsmasq.toggle

set -eu

PROG_NAME=$(basename "$0")
# export PATH=/home/ubuntu/workspace/cron-conf/bin:$PATH



observe() {
  observed_file=$(basename "$observed_path")

  if [ "$FILE" = "" ]; then
    file=$observed_file
  else
    file=$FILE
  fi

  if [ "$file" = "$observed_file" ]; then
    case "$EVENT" in
      "create")
        sudo unlink "$TARGET/$file"
        sudo systemctl restart dnsmasq
        echo "INFO: Deleted symlink \"$TARGET/$file\" automatically"
        ;;
      "delete")
        sudo ln -s "$SOURCE/$file" "$TARGET"
        sudo systemctl restart dnsmasq
        echo "INFO: Created symlink \"$TARGET/$file\" automatically"
        ;;
      "modify")
        # Only track modified files
        # "inotifywait -e modify" also tracks created files such as
        # "youtube.conf.swp", which causes "git" command to fail
        if [ "$(git -C "$TARGET" status --porcelain | grep -e "^M" -e "^ M" | grep "$file")" != "" ]; then
          git -C "$TARGET" restore "$observed_path"
          echo "INFO: Restored changes of \"$file\" automatically"
        fi
        ;;
      "move")
        # TODO
        :
        ;;
    esac
  fi
}



main() {
  parse_options "$@"
  validate "$@"

  # shellcheck disable=SC2086
  if [ "$SUDO" = "1" ]; then
    sudo inotifywait -e "$EVENT" --format '%w%f' -m -q -r -t 0 "$TARGET" | while read -r observed_path; do
      observe
    done
  else
    inotifywait -e "$EVENT" --format '%w%f' -m -q -r -t 0 "$TARGET" | while read -r observed_path; do
      observe
    done
  fi
}



parse_options() {
  # shellcheck disable=SC1090
  . "$(dirname "$(realpath "$0")")"/lib/"$PROG_NAME"/parser
  parse "$@"
  eval "set -- $REST"
}



validate() {
  if [ "$EVENT" = "" ]; then
    echo "ERROR: --event not set" >&2
    exit 1
  fi

  if [ "$SOURCE" = "" ]; then
    if [ "$EVENT" = "delete" ]; then
      echo "ERROR: --source not set" >&2
      exit 1
    fi
  fi

  if [ "$TARGET" = "" ]; then
    echo "ERROR: --target not set" >&2
    exit 1
  fi

  if [ "$MODE" = "" ]; then
    echo "ERROR: --mode not set" >&2
    exit 1
  elif [ "$MODE" != "link" ] && [ "$MODE" != "file" ] && [ "$MODE" != "cron" ]; then
    echo "Unrecognized mode: $MODE" >&2
    exit 1
  fi
}



main "$@"
