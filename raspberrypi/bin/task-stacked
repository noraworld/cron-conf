#!/bin/sh

# TODO:
#   * illegal file change

CHECK_FILE="/home/ubuntu/.tmp/task_stacked_last_update"
CHECK_INTERVAL="1800"
RESULT_FILE="/home/ubuntu/.tmp/task_stacked_last_result"

main() {
  prepare

  if [ "$(updatable)" -lt 0 ]; then
    echo "It has not taken $CHECK_INTERVAL seconds since the last update." >&2
    cat "$RESULT_FILE"
    exit "1"
  fi

  result=$(gh issue view                         \
    --repo "noraworld/diary"                     \
    $(gh issue list                              \
      --repo "noraworld/diary"                   \
      --limit 1                                  |
      awk '{ print $1 }'                         \
    )                                            \
    --json body                                  \
    --jq .body                                   |
    awk '/## 🐯 今日やること/{ flag=1; next } flag'
  )

  completed=$(echo "$result" | grep -cE "\* \[x\] \[.*\]\(https\:\/\/github\.com\/noraworld\/to\-do\/issues\/[0-9]*\)")
  stacked=$(echo "$result" | grep -cE "\* \[.\] \[.*\]\(https\:\/\/github\.com\/noraworld\/to\-do\/issues\/[0-9]*\)")
  nothing=$(echo "$result" | grep -cE "\* 特になし")

  if [ "$completed" -gt 0 ] && [ "$stacked" -gt 0 ] && [ "$completed" = "$stacked" ] && [ "$nothing" -eq 0 ]; then
    echo "2" > "$RESULT_FILE"
    echo "2"
  elif [ "$stacked" -gt 0 ] && [ "$nothing" -eq 0 ]; then
    echo "1" > "$RESULT_FILE"
    echo "1"
  elif [ "$stacked" -eq 0 ] && [ "$nothing" -eq 0 ]; then
    echo "0" > "$RESULT_FILE"
    echo "0"
  else
    echo "-1" > "$RESULT_FILE"
    echo "-1"
  fi
}

updatable() {
  if [ "$(cat "$RESULT_FILE")" -eq 0 ] ||
     [ "$(echo $(( $(date +%s) - $(cat "$CHECK_FILE") )) )" -gt "$CHECK_INTERVAL" ]; then

    date +%s > "$CHECK_FILE"
    echo "1"
  else
    echo "-1"
  fi
}

prepare() {
  [ -e "$CHECK_FILE"  ] || date +%s  > "$CHECK_FILE"
  [ -e "$RESULT_FILE" ] || echo "-1" > "$RESULT_FILE"
}

main "$@"
